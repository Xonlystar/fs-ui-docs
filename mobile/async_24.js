(this.webpackJsonpfsui=this.webpackJsonpfsui||[]).push([[24],{161:function(t,s,n){"use strict";n.r(s);var e=function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",[n("fs-group",{attrs:{title:"文字提示"}},[n("fs-button",{on:{click:function(s){return t.toast({message:"我是文字提示"})}}},[t._v("文字提示")])],1),n("fs-group",{attrs:{title:"加载提示"}},[n("fs-button",{on:{click:function(s){return t.toast({type:"loading",message:"加载中",overlay:!0})}}},[t._v("加载提示")])],1),n("fs-group",{attrs:{title:"成功/失败提示"}},[n("div",{staticClass:"button-box"},[n("fs-button",{on:{click:function(s){return t.toast({type:"success",message:"成功提示"})}}},[t._v("成功提示")]),n("fs-button",{on:{click:function(s){return t.toast({type:"fail",message:"失败提示loremfsdfadfasdfsscxvsfjsdlfsdlfjsdlfnmvcnsjdkfhsdkjbaxcnvxmcbnvsdhadjfhasdfhv"})}}},[t._v("失败提示")]),n("fs-button",{on:{click:function(s){return t.toast({type:"warning",message:"警示提示"})}}},[t._v("警示提示")])],1)])],1)};e._withStripped=!0;var o=n(9),a={name:"index",methods:{toast:function(t){Object(o.a)(t)}}},i=(n(78),n(1)),c=Object(i.a)(a,e,[],!1,null,"0e6b3c5c",null);c.options.__file="packages/toast/demo/index.vue";s.default=c.exports},47:function(t,s,n){var e=n(79);"string"==typeof e&&(e=[[t.i,e,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(19)(e,o);e.locals&&(t.exports=e.locals)},78:function(t,s,n){"use strict";var e=n(47);n.n(e).a},79:function(t,s,n){(t.exports=n(15)(!1)).push([t.i,".button-box[data-v-0e6b3c5c] {\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: flex;\n}\n.button-box button[data-v-0e6b3c5c] {\n    margin-right: 15px;\n}\n",""])}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,