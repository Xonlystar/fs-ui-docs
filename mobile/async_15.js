(this.webpackJsonpfsui=this.webpackJsonpfsui||[]).push([[15],{116:function(t,n,e){"use strict";var o=e(68);e.n(o).a},117:function(t,n,e){(t.exports=e(15)(!1)).push([t.i,"button[data-v-5d33b729] {\n  margin-right: 5px;\n  margin-bottom: 5px;\n}\n",""])},131:function(t,n,e){"use strict";e.r(n);var o=function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("div",[e("fs-group",{attrs:{title:"通知类型"}},[e("div",{staticClass:"button-box"},[e("fs-button",{on:{click:function(n){return t.notice({type:"default",message:"默认"})}}},[t._v("默认")]),e("fs-button",{on:{click:function(n){return t.notice({type:"success",message:"成功"})}}},[t._v("成功")]),e("fs-button",{on:{click:function(n){return t.notice({type:"fail",message:"失败"})}}},[t._v("失败")]),e("fs-button",{on:{click:function(n){return t.notice({type:"warning",message:"警示"})}}},[t._v("警示")]),e("fs-button",{on:{click:function(n){return t.notice({message:"自定义",background:"bisque",color:"red",duration:"5000"})}}},[t._v("自定义")])],1)])],1)};o._withStripped=!0;var i=e(20),s={name:"index",methods:{notice:function(t){Object(i.a)(t)}}},c=(e(116),e(1)),r=Object(c.a)(s,o,[],!1,null,"5d33b729",null);r.options.__file="packages/notice/demo/index.vue";n.default=r.exports},68:function(t,n,e){var o=e(117);"string"==typeof o&&(o=[[t.i,o,""]]);var i={hmr:!0,transform:void 0,insertInto:void 0};e(19)(o,i);o.locals&&(t.exports=o.locals)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mc3VpLy4vcGFja2FnZXMvbm90aWNlL2RlbW8vaW5kZXgudnVlP2JkZGQiLCJ3ZWJwYWNrOi8vZnN1aS8uL3BhY2thZ2VzL25vdGljZS9kZW1vL2luZGV4LnZ1ZT8wOGY0Iiwid2VicGFjazovL2ZzdWkvLi9wYWNrYWdlcy9ub3RpY2UvZGVtby9pbmRleC52dWU/N2E2YiIsIndlYnBhY2s6Ly9mc3VpLy4vcGFja2FnZXMvbm90aWNlL2RlbW8vaW5kZXgudnVlP2IwM2EiLCJ3ZWJwYWNrOi8vZnN1aS9wYWNrYWdlcy9ub3RpY2UvZGVtby9pbmRleC52dWUiLCJ3ZWJwYWNrOi8vZnN1aS8uL3BhY2thZ2VzL25vdGljZS9kZW1vL2luZGV4LnZ1ZSIsIndlYnBhY2s6Ly9mc3VpLy4vcGFja2FnZXMvbm90aWNlL2RlbW8vaW5kZXgudnVlPzRiNjYiXSwibmFtZXMiOlsiX25vZGVfbW9kdWxlc19zdHlsZV9sb2FkZXJfaW5kZXhfanNfbm9kZV9tb2R1bGVzX2Nzc19sb2FkZXJfaW5kZXhfanNfbm9kZV9tb2R1bGVzX3Z1ZV9sb2FkZXJfbGliX2xvYWRlcnNfc3R5bGVQb3N0TG9hZGVyX2pzX25vZGVfbW9kdWxlc19wb3N0Y3NzX2xvYWRlcl9zcmNfaW5kZXhfanNfbm9kZV9tb2R1bGVzX3Nhc3NfbG9hZGVyX2xpYl9sb2FkZXJfanNfbm9kZV9tb2R1bGVzX3Z1ZV9sb2FkZXJfbGliX2luZGV4X2pzX3Z1ZV9sb2FkZXJfb3B0aW9uc19pbmRleF92dWVfdnVlX3R5cGVfc3R5bGVfaW5kZXhfMF9pZF81ZDMzYjcyOV9sYW5nX3Njc3Nfc2NvcGVkX3RydWVfX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibiIsIm1vZHVsZSIsImV4cG9ydHMiLCJwdXNoIiwiaSIsInJlbmRlciIsIl92bSIsInRoaXMiLCJfaCIsIiRjcmVhdGVFbGVtZW50IiwiX2MiLCJfc2VsZiIsImF0dHJzIiwidGl0bGUiLCJzdGF0aWNDbGFzcyIsIm9uIiwiY2xpY2siLCIkZXZlbnQiLCJub3RpY2UiLCJ0eXBlIiwibWVzc2FnZSIsIl92IiwiYmFja2dyb3VuZCIsImNvbG9yIiwiZHVyYXRpb24iLCJfd2l0aFN0cmlwcGVkIiwibm90aWNlX2RlbW92dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18iLCJuYW1lIiwibWV0aG9kcyIsIm9iaiIsIk9iamVjdCIsInBhY2thZ2VzX25vdGljZSIsImNvbXBvbmVudCIsImNvbXBvbmVudE5vcm1hbGl6ZXIiLCJvcHRpb25zIiwiX19maWxlIiwiX193ZWJwYWNrX2V4cG9ydHNfXyIsImNvbnRlbnQiLCJobXIiLCJ0cmFuc2Zvcm0iLCJpbnNlcnRJbnRvIiwidW5kZWZpbmVkIiwibG9jYWxzIl0sIm1hcHBpbmdzIjoiK0ZBQUEsSUFBQUEsRUFBQUMsRUFBQSxJQUFBQSxFQUFBQyxFQUFBRixHQUF1YSx3QkNBdmFHLEVBQUFDLFFBQTJCSCxFQUFRLEdBQVJBLEVBQTBELElBS3JGSSxLQUFBLENBQWNGLEVBQUFHLEVBQVMsOEVBQTRFLDhDQ0xuRyxJQUFBQyxFQUFBLFdBQ0EsSUFBQUMsRUFBQUMsS0FDQUMsRUFBQUYsRUFBQUcsZUFDQUMsRUFBQUosRUFBQUssTUFBQUQsSUFBQUYsRUFDQSxPQUFBRSxFQUNBLE1BQ0EsQ0FDQUEsRUFBQSxZQUFzQkUsTUFBQSxDQUFTQyxNQUFBLFNBQWtCLENBQ2pESCxFQUNBLE1BQ0EsQ0FBV0ksWUFBQSxjQUNYLENBQ0FKLEVBQ0EsWUFDQSxDQUNBSyxHQUFBLENBQ0FDLE1BQUEsU0FBQUMsR0FDQSxPQUFBWCxFQUFBWSxPQUFBLENBQ0FDLEtBQUEsVUFDQUMsUUFBQSxVQUtBLENBQUFkLEVBQUFlLEdBQUEsUUFFQVgsRUFDQSxZQUNBLENBQ0FLLEdBQUEsQ0FDQUMsTUFBQSxTQUFBQyxHQUNBLE9BQUFYLEVBQUFZLE9BQUEsQ0FDQUMsS0FBQSxVQUNBQyxRQUFBLFVBS0EsQ0FBQWQsRUFBQWUsR0FBQSxRQUVBWCxFQUNBLFlBQ0EsQ0FDQUssR0FBQSxDQUNBQyxNQUFBLFNBQUFDLEdBQ0EsT0FBQVgsRUFBQVksT0FBQSxDQUNBQyxLQUFBLE9BQ0FDLFFBQUEsVUFLQSxDQUFBZCxFQUFBZSxHQUFBLFFBRUFYLEVBQ0EsWUFDQSxDQUNBSyxHQUFBLENBQ0FDLE1BQUEsU0FBQUMsR0FDQSxPQUFBWCxFQUFBWSxPQUFBLENBQ0FDLEtBQUEsVUFDQUMsUUFBQSxVQUtBLENBQUFkLEVBQUFlLEdBQUEsUUFFQVgsRUFDQSxZQUNBLENBQ0FLLEdBQUEsQ0FDQUMsTUFBQSxTQUFBQyxHQUNBLE9BQUFYLEVBQUFZLE9BQUEsQ0FDQUUsUUFBQSxNQUNBRSxXQUFBLFNBQ0FDLE1BQUEsTUFDQUMsU0FBQSxZQUtBLENBQUFsQixFQUFBZSxHQUFBLFVBR0EsTUFJQSxJQUlBaEIsRUFBQW9CLGVBQUEsY0M3RjJMQyxFQ2lDM0wsQ0FDQUMsS0FBQSxRQUNBQyxRQUFBLENBQ0FWLE9BREEsU0FDQVcsR0FDQUMsT0FBQUMsRUFBQSxFQUFBRCxDQUFBRCxzQkM3QkFHLEVBQWdCRixPQUFBRyxFQUFBLEVBQUFILENBQ2RKLEVBQ0FyQixFSGtGRixJR2hGQSxFQUNBLEtBQ0EsV0FDQSxNQXVCQTJCLEVBQUFFLFFBQUFDLE9BQUEsaUNBQ2VDLEVBQUEsUUFBQUosOEJDdENmLElBQUFLLEVBQWN0QyxFQUFRLEtBRXRCLGlCQUFBc0MsTUFBQSxFQUE0Q3BDLEVBQUFHLEVBQVNpQyxFQUFBLE1BT3JELElBQUFILEVBQUEsQ0FBZUksS0FBQSxFQUVmQyxlQVBBQSxFQVFBQyxnQkFBQUMsR0FFYTFDLEVBQVEsR0FBUkEsQ0FBOERzQyxFQUFBSCxHQUUzRUcsRUFBQUssU0FBQXpDLEVBQUFDLFFBQUFtQyxFQUFBSyIsImZpbGUiOiJhc3luY18xNS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTVkMzNiNzI5Jmxhbmc9c2NzcyZzY29wZWQ9dHJ1ZSZcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9NWQzM2I3MjkmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiIiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCJidXR0b25bZGF0YS12LTVkMzNiNzI5XSB7XFxuICBtYXJnaW4tcmlnaHQ6IDVweDtcXG4gIG1hcmdpbi1ib3R0b206IDVweDtcXG59XFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIiwidmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkge1xuICB2YXIgX3ZtID0gdGhpc1xuICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnRcbiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oXG4gIHJldHVybiBfYyhcbiAgICBcImRpdlwiLFxuICAgIFtcbiAgICAgIF9jKFwiZnMtZ3JvdXBcIiwgeyBhdHRyczogeyB0aXRsZTogXCLpgJrnn6XnsbvlnotcIiB9IH0sIFtcbiAgICAgICAgX2MoXG4gICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICB7IHN0YXRpY0NsYXNzOiBcImJ1dHRvbi1ib3hcIiB9LFxuICAgICAgICAgIFtcbiAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICBcImZzLWJ1dHRvblwiLFxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgb246IHtcbiAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5ub3RpY2Uoe1xuICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiZGVmYXVsdFwiLFxuICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IFwi6buY6K6kXCJcbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIFtfdm0uX3YoXCLpu5jorqRcIildXG4gICAgICAgICAgICApLFxuICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgIFwiZnMtYnV0dG9uXCIsXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLm5vdGljZSh7XG4gICAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJzdWNjZXNzXCIsXG4gICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogXCLmiJDlip9cIlxuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgW192bS5fdihcIuaIkOWKn1wiKV1cbiAgICAgICAgICAgICksXG4gICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgXCJmcy1idXR0b25cIixcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG9uOiB7XG4gICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0ubm90aWNlKHtcbiAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBcImZhaWxcIixcbiAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiBcIuWksei0pVwiXG4gICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBbX3ZtLl92KFwi5aSx6LSlXCIpXVxuICAgICAgICAgICAgKSxcbiAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICBcImZzLWJ1dHRvblwiLFxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgb246IHtcbiAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5ub3RpY2Uoe1xuICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IFwid2FybmluZ1wiLFxuICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IFwi6K2m56S6XCJcbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIFtfdm0uX3YoXCLorabnpLpcIildXG4gICAgICAgICAgICApLFxuICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgIFwiZnMtYnV0dG9uXCIsXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLm5vdGljZSh7XG4gICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogXCLoh6rlrprkuYlcIixcbiAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBcImJpc3F1ZVwiLFxuICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiBcInJlZFwiLFxuICAgICAgICAgICAgICAgICAgICAgIGR1cmF0aW9uOiBcIjUwMDBcIlxuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgW192bS5fdihcIuiHquWumuS5iVwiKV1cbiAgICAgICAgICAgIClcbiAgICAgICAgICBdLFxuICAgICAgICAgIDFcbiAgICAgICAgKVxuICAgICAgXSlcbiAgICBdLFxuICAgIDFcbiAgKVxufVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtdXG5yZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWVcblxuZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiLCI8dGVtcGxhdGU+XG4gIDxkaXY+XG4gICAgPGZzLWdyb3VwIHRpdGxlPVwi6YCa55+l57G75Z6LXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwiYnV0dG9uLWJveFwiPlxuICAgICAgICA8ZnMtYnV0dG9uIEBjbGljaz1cIm5vdGljZSh7XG4gICAgICAgIHR5cGU6ICdkZWZhdWx0JyxcbiAgICAgICAgbWVzc2FnZTogJ+m7mOiupCdcbiAgICAgICAgfSlcIj7pu5jorqQ8L2ZzLWJ1dHRvbj5cbiAgICAgICAgPGZzLWJ1dHRvbiBAY2xpY2s9XCJub3RpY2Uoe1xuICAgICAgICB0eXBlOiAnc3VjY2VzcycsXG4gICAgICAgIG1lc3NhZ2U6ICfmiJDlip8nXG4gICAgICAgIH0pXCI+5oiQ5YqfPC9mcy1idXR0b24+XG4gICAgICAgIDxmcy1idXR0b24gQGNsaWNrPVwibm90aWNlKHtcbiAgICAgICAgICB0eXBlOiAnZmFpbCcsXG4gICAgICAgICAgbWVzc2FnZTogJ+Wksei0pScsXG4gICAgICAgIH0pXCI+5aSx6LSlPC9mcy1idXR0b24+XG4gICAgICAgIDxmcy1idXR0b24gQGNsaWNrPVwibm90aWNlKHtcbiAgICAgICAgICB0eXBlOiAnd2FybmluZycsXG4gICAgICAgICAgbWVzc2FnZTogJ+itpuekuicsXG4gICAgICAgIH0pXCI+6K2m56S6PC9mcy1idXR0b24+XG4gICAgICAgIDxmcy1idXR0b24gQGNsaWNrPVwibm90aWNlKHtcbiAgICAgICAgICBtZXNzYWdlOiAn6Ieq5a6a5LmJJyxcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAnYmlzcXVlJyxcbiAgICAgICAgICBjb2xvcjogJ3JlZCcsXG4gICAgICAgICAgZHVyYXRpb246ICc1MDAwJ1xuICAgICAgICB9KVwiPuiHquWumuS5iTwvZnMtYnV0dG9uPlxuICAgICAgPC9kaXY+XG4gICAgPC9mcy1ncm91cD5cbiAgPC9kaXY+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuaW1wb3J0IE5vdGljZSBmcm9tICcuLi9pbmRleCdcbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ2luZGV4JyxcbiAgbWV0aG9kczoge1xuICAgIG5vdGljZSAob2JqKSB7XG4gICAgICBOb3RpY2Uob2JqKVxuICAgIH1cbiAgfVxufVxuPC9zY3JpcHQ+XG48c3R5bGUgbGFuZz1cInNjc3NcIiBzY29wZWQ+XG5idXR0b24ge1xuICBtYXJnaW4tcmlnaHQ6IDVweDtcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xufVxuPC9zdHlsZT5cbiIsImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTVkMzNiNzI5JnNjb3BlZD10cnVlJlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5pbXBvcnQgc3R5bGUwIGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTVkMzNiNzI5Jmxhbmc9c2NzcyZzY29wZWQ9dHJ1ZSZcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIFwiNWQzM2I3MjlcIixcbiAgbnVsbFxuICBcbilcblxuLyogaG90IHJlbG9hZCAqL1xuaWYgKG1vZHVsZS5ob3QpIHtcbiAgdmFyIGFwaSA9IHJlcXVpcmUoXCIvbWVkaWEvb25seXN0YXIv6LWE5paZL+e7hOS7tuW6ky9mcy11aS9ub2RlX21vZHVsZXMvdnVlLWhvdC1yZWxvYWQtYXBpL2Rpc3QvaW5kZXguanNcIilcbiAgYXBpLmluc3RhbGwocmVxdWlyZSgndnVlJykpXG4gIGlmIChhcGkuY29tcGF0aWJsZSkge1xuICAgIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgICBpZiAoIW1vZHVsZS5ob3QuZGF0YSkge1xuICAgICAgYXBpLmNyZWF0ZVJlY29yZCgnNWQzM2I3MjknLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbG9hZCgnNWQzM2I3MjknLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9XG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD01ZDMzYjcyOSZzY29wZWQ9dHJ1ZSZcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgYXBpLnJlcmVuZGVyKCc1ZDMzYjcyOScsIHtcbiAgICAgICAgcmVuZGVyOiByZW5kZXIsXG4gICAgICAgIHN0YXRpY1JlbmRlckZuczogc3RhdGljUmVuZGVyRm5zXG4gICAgICB9KVxuICAgIH0pXG4gIH1cbn1cbmNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwicGFja2FnZXMvbm90aWNlL2RlbW8vaW5kZXgudnVlXCJcbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9NWQzM2I3MjkmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9pbmRleC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD01ZDMzYjcyOSZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9pbmRleC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD01ZDMzYjcyOSZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59Il0sInNvdXJjZVJvb3QiOiIifQ==